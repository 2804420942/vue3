{"version":3,"file":"js/549.9fc4ba90.js","mappings":"0KAEA,MAAMA,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IACjCC,EAAsB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5CC,eAAeC,EAAaC,GAC1B,IAAIC,EAAIC,EACR,GAAIF,EAAOG,KACT,OACFC,EAAAA,GAAAA,OAAaC,KAAKC,eAClB,MAAM,iBAAEC,EAAF,gBAAoBC,EAApB,MAAqCC,EAArC,KAA4CC,EAA5C,KAAkDC,SAAeC,EAAAA,EAAAA,MACvE,GAAIZ,EAAOG,KACT,OACF,MAAMU,EAAOR,KAAKS,WAAa,IAAIJ,EAAK,CACtCK,KAA2B,OAApBd,EAAKI,KAAKW,OAAiBf,EAAK,EACvCgB,SAAUZ,KAAKa,UAAYX,EAAmBC,EAC9CW,qBAAsBvB,EAA2C,OAA5BM,EAAKG,KAAKe,eAAyBlB,EAAK,GAC7EmB,oBAAqBxB,EAAoByB,QAAQC,IAC/C,IAAIC,EACJ,QAA8C,OAApCA,EAAMnB,KAAKoB,2BAAgC,EAASD,EAAIE,SAASH,OAC1EI,KAAKJ,GAAU3B,EAAc2B,KAAQK,QAAO,CAACC,EAAKC,IAASD,EAAMC,GAAM,WAEtEzB,KAAK0B,eACP/B,EAAOG,OAEW,OAAlBE,KAAK2B,WACPnB,EAAKoB,cAAgB,IAAItB,EAAK,EAAG,EAAG,GACpCE,EAAKqB,aAAe,IAAIvB,EAAK,EAAG,EAAG,IAEjCN,KAAK8B,YACPtB,EAAKoB,cAAgB,IAAItB,EAAK,EAAG,EAAG,IACtCE,EAAKuB,SAASC,KAAKhC,KAAKC,cAAc8B,UACtCvB,EAAKyB,WAAWD,KAAKhC,KAAKC,cAAcgC,YACxCjC,KAAKkC,cAAgB,GACrB9B,EAAM+B,QAAQ3B,GACd4B,EAAAA,GAAAA,IAAcpC,MACdL,EAAO0C,MAAK,KACVjC,EAAMkC,WAAW9B,GACjB4B,EAAAA,GAAAA,UAAiBpC,MACjBA,KAAKS,gBAAa,EAClBT,KAAKkC,mBAAgB","sources":["webpack://vue3/./node_modules/lingo3d-vue/dist/enableCannon.js"],"sourcesContent":["import { aN as scene, aO as loadCannon, aP as cannonSet } from \"./index.js\";\nimport \"vue\";\nconst physicsGroups = [1, 2, 4, 8, 16, 32];\nconst physicsGroupIndexes = [0, 1, 2, 3, 4, 5];\nasync function enableCannon(handle) {\n  var _a, _b;\n  if (handle.done)\n    return;\n  scene.attach(this.outerObject3d);\n  const { slipperyMaterial, defaultMaterial, world, Body, Vec3 } = await loadCannon();\n  if (handle.done)\n    return;\n  const body = this.cannonBody = new Body({\n    mass: (_a = this._mass) != null ? _a : 1,\n    material: this._slippery ? slipperyMaterial : defaultMaterial,\n    collisionFilterGroup: physicsGroups[(_b = this._physicsGroup) != null ? _b : 0],\n    collisionFilterMask: physicsGroupIndexes.filter((index) => {\n      var _a2;\n      return !((_a2 = this._ignorePhysicsGroups) == null ? void 0 : _a2.includes(index));\n    }).map((index) => physicsGroups[index]).reduce((acc, curr) => acc + curr, 0)\n  });\n  await this.physicsShape();\n  if (handle.done)\n    return;\n  if (this._physics === \"2d\") {\n    body.angularFactor = new Vec3(0, 0, 1);\n    body.linearFactor = new Vec3(1, 1, 0);\n  }\n  if (this._noTumble)\n    body.angularFactor = new Vec3(0, 0, 0);\n  body.position.copy(this.outerObject3d.position);\n  body.quaternion.copy(this.outerObject3d.quaternion);\n  this.physicsUpdate = {};\n  world.addBody(body);\n  cannonSet.add(this);\n  handle.then(() => {\n    world.removeBody(body);\n    cannonSet.delete(this);\n    this.cannonBody = void 0;\n    this.physicsUpdate = void 0;\n  });\n}\nexport { enableCannon as default };\n"],"names":["physicsGroups","physicsGroupIndexes","async","enableCannon","handle","_a","_b","done","scene","this","outerObject3d","slipperyMaterial","defaultMaterial","world","Body","Vec3","loadCannon","body","cannonBody","mass","_mass","material","_slippery","collisionFilterGroup","_physicsGroup","collisionFilterMask","filter","index","_a2","_ignorePhysicsGroups","includes","map","reduce","acc","curr","physicsShape","_physics","angularFactor","linearFactor","_noTumble","position","copy","quaternion","physicsUpdate","addBody","cannonSet","then","removeBody"],"sourceRoot":""}