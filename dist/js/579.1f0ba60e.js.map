{"version":3,"file":"js/579.1f0ba60e.js","mappings":"2KAGAA,eAAeC,EAAaC,EAAQC,GAClC,GAAID,EAAOE,KACT,OACFC,EAAAA,GAAAA,OAAaC,KAAKC,eAClB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,GAAWJ,MACzC,IAAK,MAAMK,KAAUH,GACnBI,EAAAA,EAAAA,IAAWD,GAKb,GAJAT,EAAOW,MAAK,KACV,IAAK,MAAMF,KAAUH,GACnBM,EAAAA,EAAAA,IAAWH,MAEXR,EACF,IAAK,MAAMY,KAAQN,EAAY,CAC7B,MAAMO,EAAa,IAAIC,EAAAA,EAAkB,IAAIC,EAAAA,EAAKH,EAAMI,EAAAA,IAAoB,IAC5Ed,EAAAA,GAAAA,IAAUW,GACVd,EAAOW,MAAK,IAAMR,EAAAA,GAAAA,OAAaW","sources":["webpack://vue3/./node_modules/lingo3d-vue/dist/enableBVHMap.js"],"sourcesContent":["import { c as computeBVH, M as MeshBVHVisualizer } from \"./computeBVH.js\";\nimport { aN as scene, aQ as pushBVHMap, aR as pullBVHMap, c as Mesh, aS as wireframeMaterial } from \"./index.js\";\nimport \"vue\";\nasync function enableBVHMap(handle, debug) {\n  if (handle.done)\n    return;\n  scene.attach(this.outerObject3d);\n  const [bvhMaps, geometries] = computeBVH(this);\n  for (const bvhMap of bvhMaps)\n    pushBVHMap(bvhMap);\n  handle.then(() => {\n    for (const bvhMap of bvhMaps)\n      pullBVHMap(bvhMap);\n  });\n  if (debug)\n    for (const geom of geometries) {\n      const visualizer = new MeshBVHVisualizer(new Mesh(geom, wireframeMaterial), 20);\n      scene.add(visualizer);\n      handle.then(() => scene.remove(visualizer));\n    }\n}\nexport { enableBVHMap as default };\n"],"names":["async","enableBVHMap","handle","debug","done","scene","this","outerObject3d","bvhMaps","geometries","computeBVH","bvhMap","pushBVHMap","then","pullBVHMap","geom","visualizer","MeshBVHVisualizer","Mesh","wireframeMaterial"],"sourceRoot":""}