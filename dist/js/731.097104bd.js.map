{"version":3,"file":"js/731.097104bd.js","mappings":"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","sources":["webpack://vue3/./node_modules/lingo3d-vue/dist/TransformControls.js"],"sourcesContent":["import { R as Raycaster, V as Vector3, Q as Quaternion, O as Object3D, E as Euler, M as Matrix4, a as MeshBasicMaterial, L as LineBasicMaterial, C as CylinderGeometry, B as BoxGeometry, b as BufferGeometry, F as Float32BufferAttribute, c as Mesh, d as OctahedronGeometry, e as Line, S as SphereGeometry, T as TorusGeometry, P as PlaneGeometry, D as DoubleSide } from \"./index.js\";\nimport \"vue\";\nconst _raycaster = new Raycaster();\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n  X: new Vector3(1, 0, 0),\n  Y: new Vector3(0, 1, 0),\n  Z: new Vector3(0, 0, 1)\n};\nconst _changeEvent = { type: \"change\" };\nconst _mouseDownEvent = { type: \"mouseDown\" };\nconst _mouseUpEvent = { type: \"mouseUp\", mode: null };\nconst _objectChangeEvent = { type: \"objectChange\" };\nclass TransformControls extends Object3D {\n  constructor(camera, domElement) {\n    super();\n    if (domElement === void 0) {\n      console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n      domElement = document;\n    }\n    this.visible = false;\n    this.domElement = domElement;\n    this.domElement.style.touchAction = \"none\";\n    const _gizmo = new TransformControlsGizmo();\n    this._gizmo = _gizmo;\n    this.add(_gizmo);\n    const _plane = new TransformControlsPlane();\n    this._plane = _plane;\n    this.add(_plane);\n    const scope = this;\n    function defineProperty(propName, defaultValue) {\n      let propValue = defaultValue;\n      Object.defineProperty(scope, propName, {\n        get: function() {\n          return propValue !== void 0 ? propValue : defaultValue;\n        },\n        set: function(value) {\n          if (propValue !== value) {\n            propValue = value;\n            _plane[propName] = value;\n            _gizmo[propName] = value;\n            scope.dispatchEvent({ type: propName + \"-changed\", value });\n            scope.dispatchEvent(_changeEvent);\n          }\n        }\n      });\n      scope[propName] = defaultValue;\n      _plane[propName] = defaultValue;\n      _gizmo[propName] = defaultValue;\n    }\n    defineProperty(\"camera\", camera);\n    defineProperty(\"object\", void 0);\n    defineProperty(\"enabled\", true);\n    defineProperty(\"axis\", null);\n    defineProperty(\"mode\", \"translate\");\n    defineProperty(\"translationSnap\", null);\n    defineProperty(\"rotationSnap\", null);\n    defineProperty(\"scaleSnap\", null);\n    defineProperty(\"space\", \"world\");\n    defineProperty(\"size\", 1);\n    defineProperty(\"dragging\", false);\n    defineProperty(\"showX\", true);\n    defineProperty(\"showY\", true);\n    defineProperty(\"showZ\", true);\n    const worldPosition = new Vector3();\n    const worldPositionStart = new Vector3();\n    const worldQuaternion = new Quaternion();\n    const worldQuaternionStart = new Quaternion();\n    const cameraPosition = new Vector3();\n    const cameraQuaternion = new Quaternion();\n    const pointStart = new Vector3();\n    const pointEnd = new Vector3();\n    const rotationAxis = new Vector3();\n    const rotationAngle = 0;\n    const eye = new Vector3();\n    defineProperty(\"worldPosition\", worldPosition);\n    defineProperty(\"worldPositionStart\", worldPositionStart);\n    defineProperty(\"worldQuaternion\", worldQuaternion);\n    defineProperty(\"worldQuaternionStart\", worldQuaternionStart);\n    defineProperty(\"cameraPosition\", cameraPosition);\n    defineProperty(\"cameraQuaternion\", cameraQuaternion);\n    defineProperty(\"pointStart\", pointStart);\n    defineProperty(\"pointEnd\", pointEnd);\n    defineProperty(\"rotationAxis\", rotationAxis);\n    defineProperty(\"rotationAngle\", rotationAngle);\n    defineProperty(\"eye\", eye);\n    this._offset = new Vector3();\n    this._startNorm = new Vector3();\n    this._endNorm = new Vector3();\n    this._cameraScale = new Vector3();\n    this._parentPosition = new Vector3();\n    this._parentQuaternion = new Quaternion();\n    this._parentQuaternionInv = new Quaternion();\n    this._parentScale = new Vector3();\n    this._worldScaleStart = new Vector3();\n    this._worldQuaternionInv = new Quaternion();\n    this._worldScale = new Vector3();\n    this._positionStart = new Vector3();\n    this._quaternionStart = new Quaternion();\n    this._scaleStart = new Vector3();\n    this._getPointer = getPointer.bind(this);\n    this._onPointerDown = onPointerDown.bind(this);\n    this._onPointerHover = onPointerHover.bind(this);\n    this._onPointerMove = onPointerMove.bind(this);\n    this._onPointerUp = onPointerUp.bind(this);\n    this.domElement.addEventListener(\"pointerdown\", this._onPointerDown);\n    this.domElement.addEventListener(\"pointermove\", this._onPointerHover);\n    this.domElement.addEventListener(\"pointerup\", this._onPointerUp);\n  }\n  updateMatrixWorld() {\n    if (this.object !== void 0) {\n      this.object.updateMatrixWorld();\n      if (this.object.parent === null) {\n        console.error(\"TransformControls: The attached 3D object must be a part of the scene graph.\");\n      } else {\n        this.object.parent.matrixWorld.decompose(this._parentPosition, this._parentQuaternion, this._parentScale);\n      }\n      this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this._worldScale);\n      this._parentQuaternionInv.copy(this._parentQuaternion).invert();\n      this._worldQuaternionInv.copy(this.worldQuaternion).invert();\n    }\n    this.camera.updateMatrixWorld();\n    this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this._cameraScale);\n    this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n    super.updateMatrixWorld(this);\n  }\n  pointerHover(pointer) {\n    if (this.object === void 0 || this.dragging === true)\n      return;\n    _raycaster.setFromCamera(pointer, this.camera);\n    const intersect = intersectObjectWithRay(this._gizmo.picker[this.mode], _raycaster);\n    if (intersect) {\n      this.axis = intersect.object.name;\n    } else {\n      this.axis = null;\n    }\n  }\n  pointerDown(pointer) {\n    if (this.object === void 0 || this.dragging === true || pointer.button !== 0)\n      return;\n    if (this.axis !== null) {\n      _raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n      if (planeIntersect) {\n        this.object.updateMatrixWorld();\n        this.object.parent.updateMatrixWorld();\n        this._positionStart.copy(this.object.position);\n        this._quaternionStart.copy(this.object.quaternion);\n        this._scaleStart.copy(this.object.scale);\n        this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart);\n        this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n      }\n      this.dragging = true;\n      _mouseDownEvent.mode = this.mode;\n      this.dispatchEvent(_mouseDownEvent);\n    }\n  }\n  pointerMove(pointer) {\n    const axis = this.axis;\n    const mode = this.mode;\n    const object = this.object;\n    let space = this.space;\n    if (mode === \"scale\") {\n      space = \"local\";\n    } else if (axis === \"E\" || axis === \"XYZE\" || axis === \"XYZ\") {\n      space = \"world\";\n    }\n    if (object === void 0 || axis === null || this.dragging === false || pointer.button !== -1)\n      return;\n    _raycaster.setFromCamera(pointer, this.camera);\n    const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n    if (!planeIntersect)\n      return;\n    this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n    if (mode === \"translate\") {\n      this._offset.copy(this.pointEnd).sub(this.pointStart);\n      if (space === \"local\" && axis !== \"XYZ\") {\n        this._offset.applyQuaternion(this._worldQuaternionInv);\n      }\n      if (axis.indexOf(\"X\") === -1)\n        this._offset.x = 0;\n      if (axis.indexOf(\"Y\") === -1)\n        this._offset.y = 0;\n      if (axis.indexOf(\"Z\") === -1)\n        this._offset.z = 0;\n      if (space === \"local\" && axis !== \"XYZ\") {\n        this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale);\n      } else {\n        this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale);\n      }\n      object.position.copy(this._offset).add(this._positionStart);\n      if (this.translationSnap) {\n        if (space === \"local\") {\n          object.position.applyQuaternion(_tempQuaternion.copy(this._quaternionStart).invert());\n          if (axis.search(\"X\") !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search(\"Y\") !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search(\"Z\") !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n          object.position.applyQuaternion(this._quaternionStart);\n        }\n        if (space === \"world\") {\n          if (object.parent) {\n            object.position.add(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n          if (axis.search(\"X\") !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search(\"Y\") !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search(\"Z\") !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n          if (object.parent) {\n            object.position.sub(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n        }\n      }\n    } else if (mode === \"scale\") {\n      if (axis.search(\"XYZ\") !== -1) {\n        let d = this.pointEnd.length() / this.pointStart.length();\n        if (this.pointEnd.dot(this.pointStart) < 0)\n          d *= -1;\n        _tempVector2.set(d, d, d);\n      } else {\n        _tempVector.copy(this.pointStart);\n        _tempVector2.copy(this.pointEnd);\n        _tempVector.applyQuaternion(this._worldQuaternionInv);\n        _tempVector2.applyQuaternion(this._worldQuaternionInv);\n        _tempVector2.divide(_tempVector);\n        if (axis.search(\"X\") === -1) {\n          _tempVector2.x = 1;\n        }\n        if (axis.search(\"Y\") === -1) {\n          _tempVector2.y = 1;\n        }\n        if (axis.search(\"Z\") === -1) {\n          _tempVector2.z = 1;\n        }\n      }\n      object.scale.copy(this._scaleStart).multiply(_tempVector2);\n      if (this.scaleSnap) {\n        if (axis.search(\"X\") !== -1) {\n          object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n        if (axis.search(\"Y\") !== -1) {\n          object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n        if (axis.search(\"Z\") !== -1) {\n          object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n      }\n    } else if (mode === \"rotate\") {\n      this._offset.copy(this.pointEnd).sub(this.pointStart);\n      const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(_tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n      if (axis === \"E\") {\n        this.rotationAxis.copy(this.eye);\n        this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n        this._startNorm.copy(this.pointStart).normalize();\n        this._endNorm.copy(this.pointEnd).normalize();\n        this.rotationAngle *= this._endNorm.cross(this._startNorm).dot(this.eye) < 0 ? 1 : -1;\n      } else if (axis === \"XYZE\") {\n        this.rotationAxis.copy(this._offset).cross(this.eye).normalize();\n        this.rotationAngle = this._offset.dot(_tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n      } else if (axis === \"X\" || axis === \"Y\" || axis === \"Z\") {\n        this.rotationAxis.copy(_unit[axis]);\n        _tempVector.copy(_unit[axis]);\n        if (space === \"local\") {\n          _tempVector.applyQuaternion(this.worldQuaternion);\n        }\n        this.rotationAngle = this._offset.dot(_tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n      }\n      if (this.rotationSnap)\n        this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n      if (space === \"local\" && axis !== \"E\" && axis !== \"XYZE\") {\n        object.quaternion.copy(this._quaternionStart);\n        object.quaternion.multiply(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n      } else {\n        this.rotationAxis.applyQuaternion(this._parentQuaternionInv);\n        object.quaternion.copy(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n        object.quaternion.multiply(this._quaternionStart).normalize();\n      }\n    }\n    this.dispatchEvent(_changeEvent);\n    this.dispatchEvent(_objectChangeEvent);\n  }\n  pointerUp(pointer) {\n    if (pointer.button !== 0)\n      return;\n    if (this.dragging && this.axis !== null) {\n      _mouseUpEvent.mode = this.mode;\n      this.dispatchEvent(_mouseUpEvent);\n    }\n    this.dragging = false;\n    this.axis = null;\n  }\n  dispose() {\n    this.domElement.removeEventListener(\"pointerdown\", this._onPointerDown);\n    this.domElement.removeEventListener(\"pointermove\", this._onPointerHover);\n    this.domElement.removeEventListener(\"pointermove\", this._onPointerMove);\n    this.domElement.removeEventListener(\"pointerup\", this._onPointerUp);\n    this.traverse(function(child) {\n      if (child.geometry)\n        child.geometry.dispose();\n      if (child.material)\n        child.material.dispose();\n    });\n  }\n  attach(object) {\n    this.object = object;\n    this.visible = true;\n    return this;\n  }\n  detach() {\n    this.object = void 0;\n    this.visible = false;\n    this.axis = null;\n    return this;\n  }\n  reset() {\n    if (!this.enabled)\n      return;\n    if (this.dragging) {\n      this.object.position.copy(this._positionStart);\n      this.object.quaternion.copy(this._quaternionStart);\n      this.object.scale.copy(this._scaleStart);\n      this.dispatchEvent(_changeEvent);\n      this.dispatchEvent(_objectChangeEvent);\n      this.pointStart.copy(this.pointEnd);\n    }\n  }\n  getRaycaster() {\n    return _raycaster;\n  }\n  getMode() {\n    return this.mode;\n  }\n  setMode(mode) {\n    this.mode = mode;\n  }\n  setTranslationSnap(translationSnap) {\n    this.translationSnap = translationSnap;\n  }\n  setRotationSnap(rotationSnap) {\n    this.rotationSnap = rotationSnap;\n  }\n  setScaleSnap(scaleSnap) {\n    this.scaleSnap = scaleSnap;\n  }\n  setSize(size) {\n    this.size = size;\n  }\n  setSpace(space) {\n    this.space = space;\n  }\n  update() {\n    console.warn(\"THREE.TransformControls: update function has no more functionality and therefore has been deprecated.\");\n  }\n}\nTransformControls.prototype.isTransformControls = true;\nfunction getPointer(event) {\n  if (this.domElement.ownerDocument.pointerLockElement) {\n    return {\n      x: 0,\n      y: 0,\n      button: event.button\n    };\n  } else {\n    const rect = this.domElement.getBoundingClientRect();\n    return {\n      x: (event.clientX - rect.left) / rect.width * 2 - 1,\n      y: -(event.clientY - rect.top) / rect.height * 2 + 1,\n      button: event.button\n    };\n  }\n}\nfunction onPointerHover(event) {\n  if (!this.enabled)\n    return;\n  switch (event.pointerType) {\n    case \"mouse\":\n    case \"pen\":\n      this.pointerHover(this._getPointer(event));\n      break;\n  }\n}\nfunction onPointerDown(event) {\n  if (!this.enabled)\n    return;\n  if (!document.pointerLockElement) {\n    this.domElement.setPointerCapture(event.pointerId);\n  }\n  this.domElement.addEventListener(\"pointermove\", this._onPointerMove);\n  this.pointerHover(this._getPointer(event));\n  this.pointerDown(this._getPointer(event));\n}\nfunction onPointerMove(event) {\n  if (!this.enabled)\n    return;\n  this.pointerMove(this._getPointer(event));\n}\nfunction onPointerUp(event) {\n  if (!this.enabled)\n    return;\n  this.domElement.releasePointerCapture(event.pointerId);\n  this.domElement.removeEventListener(\"pointermove\", this._onPointerMove);\n  this.pointerUp(this._getPointer(event));\n}\nfunction intersectObjectWithRay(object, raycaster, includeInvisible) {\n  const allIntersections = raycaster.intersectObject(object, true);\n  for (let i = 0; i < allIntersections.length; i++) {\n    if (allIntersections[i].object.visible || includeInvisible) {\n      return allIntersections[i];\n    }\n  }\n  return false;\n}\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3(0, 1, 0);\nconst _zeroVector = new Vector3(0, 0, 0);\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\nconst _unitX = new Vector3(1, 0, 0);\nconst _unitY = new Vector3(0, 1, 0);\nconst _unitZ = new Vector3(0, 0, 1);\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super();\n    this.type = \"TransformControlsGizmo\";\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    });\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoLineMaterial.clone();\n    matHelper.opacity = 0.5;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.setHex(16711680);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.setHex(65280);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.setHex(255);\n    const matRedTransparent = gizmoMaterial.clone();\n    matRedTransparent.color.setHex(16711680);\n    matRedTransparent.opacity = 0.5;\n    const matGreenTransparent = gizmoMaterial.clone();\n    matGreenTransparent.color.setHex(65280);\n    matGreenTransparent.opacity = 0.5;\n    const matBlueTransparent = gizmoMaterial.clone();\n    matBlueTransparent.color.setHex(255);\n    matBlueTransparent.opacity = 0.5;\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = gizmoMaterial.clone();\n    matYellowTransparent.color.setHex(16776960);\n    matYellowTransparent.opacity = 0.25;\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.setHex(16776960);\n    const matGray = gizmoMaterial.clone();\n    matGray.color.setHex(7895160);\n    const arrowGeometry = new CylinderGeometry(0, 0.04, 0.1, 12);\n    arrowGeometry.translate(0, 0.05, 0);\n    const scaleHandleGeometry = new BoxGeometry(0.08, 0.08, 0.08);\n    scaleHandleGeometry.translate(0, 0.04, 0);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const lineGeometry2 = new CylinderGeometry(75e-4, 75e-4, 0.5, 3);\n    lineGeometry2.translate(0, 0.25, 0);\n    function CircleGeometry(radius, arc) {\n      const geometry = new TorusGeometry(radius, 75e-4, 3, 64, arc * Math.PI * 2);\n      geometry.rotateY(Math.PI / 2);\n      geometry.rotateX(Math.PI / 2);\n      return geometry;\n    }\n    function TranslateHelperGeometry() {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute(\"position\", new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }\n    const gizmoTranslate = {\n      X: [\n        [new Mesh(arrowGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(arrowGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]],\n        [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(arrowGeometry, matGreen), [0, 0.5, 0]],\n        [new Mesh(arrowGeometry, matGreen), [0, -0.5, 0], [Math.PI, 0, 0]],\n        [new Mesh(lineGeometry2, matGreen)]\n      ],\n      Z: [\n        [new Mesh(arrowGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n        [new Mesh(arrowGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]],\n        [new Mesh(lineGeometry2, matBlue), null, [Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0]]\n      ],\n      XY: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent.clone()), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ]\n    };\n    const pickerTranslate = {\n      X: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]\n      ],\n      XY: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ]\n    };\n    const helperTranslate = {\n      START: [\n        [new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]\n      ],\n      END: [\n        [new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, \"helper\"]\n      ],\n      DELTA: [\n        [new Line(TranslateHelperGeometry(), matHelper), null, null, null, \"helper\"]\n      ],\n      X: [\n        [new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ],\n      Y: [\n        [new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]\n      ],\n      Z: [\n        [new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]\n      ]\n    };\n    const gizmoRotate = {\n      XYZE: [\n        [new Mesh(CircleGeometry(0.5, 1), matGray), null, [0, Math.PI / 2, 0]]\n      ],\n      X: [\n        [new Mesh(CircleGeometry(0.5, 0.5), matRed)]\n      ],\n      Y: [\n        [new Mesh(CircleGeometry(0.5, 0.5), matGreen), null, [0, 0, -Math.PI / 2]]\n      ],\n      Z: [\n        [new Mesh(CircleGeometry(0.5, 0.5), matBlue), null, [0, Math.PI / 2, 0]]\n      ],\n      E: [\n        [new Mesh(CircleGeometry(0.75, 1), matYellowTransparent), null, [0, Math.PI / 2, 0]]\n      ]\n    };\n    const helperRotate = {\n      AXIS: [\n        [new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ]\n    };\n    const pickerRotate = {\n      XYZE: [\n        [new Mesh(new SphereGeometry(0.25, 10, 8), matInvisible)]\n      ],\n      X: [\n        [new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]\n      ],\n      Z: [\n        [new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]\n      ],\n      E: [\n        [new Mesh(new TorusGeometry(0.75, 0.1, 2, 24), matInvisible)]\n      ]\n    };\n    const gizmoScale = {\n      X: [\n        [new Mesh(scaleHandleGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(scaleHandleGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(scaleHandleGeometry, matGreen), [0, 0.5, 0]],\n        [new Mesh(lineGeometry2, matGreen)],\n        [new Mesh(scaleHandleGeometry, matGreen), [0, -0.5, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n        [new Mesh(lineGeometry2, matBlue), [0, 0, 0], [Math.PI / 2, 0, 0]],\n        [new Mesh(scaleHandleGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]]\n      ],\n      XY: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new Mesh(new BoxGeometry(0.1, 0.1, 0.1), matWhiteTransparent.clone())]\n      ]\n    };\n    const pickerScale = {\n      X: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]\n      ],\n      Y: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]\n      ],\n      Z: [\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]],\n        [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]\n      ],\n      XY: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]\n      ],\n      YZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n      ],\n      XZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]\n      ],\n      XYZ: [\n        [new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 0]]\n      ]\n    };\n    const helperScale = {\n      X: [\n        [new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], \"helper\"]\n      ],\n      Y: [\n        [new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], \"helper\"]\n      ],\n      Z: [\n        [new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], \"helper\"]\n      ]\n    };\n    function setupGizmo(gizmoMap) {\n      const gizmo = new Object3D();\n      for (const name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--; ) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4];\n          object.name = name;\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    }\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo[\"scale\"] = setupGizmo(gizmoScale));\n    this.add(this.picker[\"translate\"] = setupGizmo(pickerTranslate));\n    this.add(this.picker[\"rotate\"] = setupGizmo(pickerRotate));\n    this.add(this.picker[\"scale\"] = setupGizmo(pickerScale));\n    this.add(this.helper[\"translate\"] = setupGizmo(helperTranslate));\n    this.add(this.helper[\"rotate\"] = setupGizmo(helperRotate));\n    this.add(this.helper[\"scale\"] = setupGizmo(helperScale));\n    this.picker[\"translate\"].visible = false;\n    this.picker[\"rotate\"].visible = false;\n    this.picker[\"scale\"].visible = false;\n  }\n  updateMatrixWorld(force) {\n    const space = this.mode === \"scale\" ? \"local\" : this.space;\n    const quaternion = space === \"local\" ? this.worldQuaternion : _identityQuaternion;\n    this.gizmo[\"translate\"].visible = this.mode === \"translate\";\n    this.gizmo[\"rotate\"].visible = this.mode === \"rotate\";\n    this.gizmo[\"scale\"].visible = this.mode === \"scale\";\n    this.helper[\"translate\"].visible = this.mode === \"translate\";\n    this.helper[\"rotate\"].visible = this.mode === \"rotate\";\n    this.helper[\"scale\"].visible = this.mode === \"scale\";\n    let handles = [];\n    handles = handles.concat(this.picker[this.mode].children);\n    handles = handles.concat(this.gizmo[this.mode].children);\n    handles = handles.concat(this.helper[this.mode].children);\n    for (let i = 0; i < handles.length; i++) {\n      const handle = handles[i];\n      handle.visible = true;\n      handle.rotation.set(0, 0, 0);\n      handle.position.copy(this.worldPosition);\n      let factor;\n      if (this.camera.isOrthographicCamera) {\n        factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n      } else {\n        factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n      }\n      handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 4);\n      if (handle.tag === \"helper\") {\n        handle.visible = false;\n        if (handle.name === \"AXIS\") {\n          handle.position.copy(this.worldPositionStart);\n          handle.visible = !!this.axis;\n          if (this.axis === \"X\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, 0));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === \"Y\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, Math.PI / 2));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === \"Z\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n            if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === \"XYZE\") {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n            _alignVector.copy(this.rotationAxis);\n            handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(_zeroVector, _alignVector, _unitY));\n            handle.quaternion.multiply(_tempQuaternion);\n            handle.visible = this.dragging;\n          }\n          if (this.axis === \"E\") {\n            handle.visible = false;\n          }\n        } else if (handle.name === \"START\") {\n          handle.position.copy(this.worldPositionStart);\n          handle.visible = this.dragging;\n        } else if (handle.name === \"END\") {\n          handle.position.copy(this.worldPosition);\n          handle.visible = this.dragging;\n        } else if (handle.name === \"DELTA\") {\n          handle.position.copy(this.worldPositionStart);\n          handle.quaternion.copy(this.worldQuaternionStart);\n          _tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n          _tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n          handle.scale.copy(_tempVector);\n          handle.visible = this.dragging;\n        } else {\n          handle.quaternion.copy(quaternion);\n          if (this.dragging) {\n            handle.position.copy(this.worldPositionStart);\n          } else {\n            handle.position.copy(this.worldPosition);\n          }\n          if (this.axis) {\n            handle.visible = this.axis.search(handle.name) !== -1;\n          }\n        }\n        continue;\n      }\n      handle.quaternion.copy(quaternion);\n      if (this.mode === \"translate\" || this.mode === \"scale\") {\n        const AXIS_HIDE_TRESHOLD = 0.99;\n        const PLANE_HIDE_TRESHOLD = 0.2;\n        if (handle.name === \"X\") {\n          if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"Y\") {\n          if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"Z\") {\n          if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"XY\") {\n          if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"YZ\") {\n          if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === \"XZ\") {\n          if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n      } else if (this.mode === \"rotate\") {\n        _tempQuaternion2.copy(quaternion);\n        _alignVector.copy(this.eye).applyQuaternion(_tempQuaternion.copy(quaternion).invert());\n        if (handle.name.search(\"E\") !== -1) {\n          handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(this.eye, _zeroVector, _unitY));\n        }\n        if (handle.name === \"X\") {\n          _tempQuaternion.setFromAxisAngle(_unitX, Math.atan2(-_alignVector.y, _alignVector.z));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n        if (handle.name === \"Y\") {\n          _tempQuaternion.setFromAxisAngle(_unitY, Math.atan2(_alignVector.x, _alignVector.z));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n        if (handle.name === \"Z\") {\n          _tempQuaternion.setFromAxisAngle(_unitZ, Math.atan2(_alignVector.y, _alignVector.x));\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n          handle.quaternion.copy(_tempQuaternion);\n        }\n      }\n      handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX);\n      handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY);\n      handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ);\n      handle.visible = handle.visible && (handle.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ);\n      handle.material._color = handle.material._color || handle.material.color.clone();\n      handle.material._opacity = handle.material._opacity || handle.material.opacity;\n      handle.material.color.copy(handle.material._color);\n      handle.material.opacity = handle.material._opacity;\n      if (this.enabled && this.axis) {\n        if (handle.name === this.axis) {\n          handle.material.color.setHex(16776960);\n          handle.material.opacity = 1;\n        } else if (this.axis.split(\"\").some(function(a) {\n          return handle.name === a;\n        })) {\n          handle.material.color.setHex(16776960);\n          handle.material.opacity = 1;\n        }\n      }\n    }\n    super.updateMatrixWorld(force);\n  }\n}\nTransformControlsGizmo.prototype.isTransformControlsGizmo = true;\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(1e5, 1e5, 2, 2), new MeshBasicMaterial({ visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false }));\n    this.type = \"TransformControlsPlane\";\n  }\n  updateMatrixWorld(force) {\n    let space = this.space;\n    this.position.copy(this.worldPosition);\n    if (this.mode === \"scale\")\n      space = \"local\";\n    _v1.copy(_unitX).applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion);\n    _v2.copy(_unitY).applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion);\n    _v3.copy(_unitZ).applyQuaternion(space === \"local\" ? this.worldQuaternion : _identityQuaternion);\n    _alignVector.copy(_v2);\n    switch (this.mode) {\n      case \"translate\":\n      case \"scale\":\n        switch (this.axis) {\n          case \"X\":\n            _alignVector.copy(this.eye).cross(_v1);\n            _dirVector.copy(_v1).cross(_alignVector);\n            break;\n          case \"Y\":\n            _alignVector.copy(this.eye).cross(_v2);\n            _dirVector.copy(_v2).cross(_alignVector);\n            break;\n          case \"Z\":\n            _alignVector.copy(this.eye).cross(_v3);\n            _dirVector.copy(_v3).cross(_alignVector);\n            break;\n          case \"XY\":\n            _dirVector.copy(_v3);\n            break;\n          case \"YZ\":\n            _dirVector.copy(_v1);\n            break;\n          case \"XZ\":\n            _alignVector.copy(_v3);\n            _dirVector.copy(_v2);\n            break;\n          case \"XYZ\":\n          case \"E\":\n            _dirVector.set(0, 0, 0);\n            break;\n        }\n        break;\n      case \"rotate\":\n      default:\n        _dirVector.set(0, 0, 0);\n    }\n    if (_dirVector.length() === 0) {\n      this.quaternion.copy(this.cameraQuaternion);\n    } else {\n      _tempMatrix.lookAt(_tempVector.set(0, 0, 0), _dirVector, _alignVector);\n      this.quaternion.setFromRotationMatrix(_tempMatrix);\n    }\n    super.updateMatrixWorld(force);\n  }\n}\nTransformControlsPlane.prototype.isTransformControlsPlane = true;\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"names":["_raycaster","Raycaster","_tempVector","Vector3","_tempVector2","_tempQuaternion","Quaternion","_unit","X","Y","Z","_changeEvent","type","_mouseDownEvent","_mouseUpEvent","mode","_objectChangeEvent","TransformControls","Object3D","constructor","camera","domElement","super","console","warn","document","this","visible","style","touchAction","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","rotationAngle","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","getPointer","bind","_onPointerDown","onPointerDown","_onPointerHover","onPointerHover","_onPointerMove","onPointerMove","_onPointerUp","onPointerUp","addEventListener","updateMatrixWorld","object","parent","error","matrixWorld","decompose","copy","invert","sub","normalize","pointerHover","pointer","dragging","setFromCamera","intersect","intersectObjectWithRay","picker","axis","name","pointerDown","button","planeIntersect","position","quaternion","scale","point","pointerMove","space","applyQuaternion","indexOf","x","y","z","divide","translationSnap","search","Math","round","setFromMatrixPosition","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","rotationSnap","setFromAxisAngle","pointerUp","dispose","removeEventListener","traverse","child","geometry","material","attach","detach","reset","enabled","getRaycaster","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","event","ownerDocument","pointerLockElement","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","setPointerCapture","pointerId","releasePointerCapture","raycaster","includeInvisible","allIntersections","intersectObject","i","prototype","isTransformControls","_tempEuler","Euler","_alignVector","_zeroVector","_lookAtMatrix","Matrix4","_tempQuaternion2","_identityQuaternion","_dirVector","_tempMatrix","_unitX","_unitY","_unitZ","_v1","_v2","_v3","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","LineBasicMaterial","matInvisible","clone","opacity","matHelper","matRed","color","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matYellow","matGray","arrowGeometry","CylinderGeometry","translate","scaleHandleGeometry","BoxGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","lineGeometry2","CircleGeometry","radius","arc","TorusGeometry","PI","rotateY","rotateX","TranslateHelperGeometry","gizmoTranslate","Mesh","XYZ","OctahedronGeometry","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","Line","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","SphereGeometry","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","rotation","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","helper","force","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","abs","setFromRotationMatrix","lookAt","atan2","multiplyQuaternions","showX","showY","showZ","_color","_opacity","split","some","a","setFromEuler","isTransformControlsGizmo","PlaneGeometry","wireframe","side","DoubleSide","isTransformControlsPlane"],"sourceRoot":""}